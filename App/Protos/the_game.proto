syntax = "proto2";

message Card {
  optional int32 value = 1;
}

message Cards {
  repeated Card cards = 1;
}

/*
Currently a copy of Cards, but could be different in the future

A pile is a list of cards with the last card represeting the top card
*/
message Pile {
  repeated Card cards = 1;
}

message Piles {
  optional Pile firstOne = 1;
  optional Pile secondOne = 2;
  optional Pile firstHundred = 3;
  optional Pile secondHundred = 4;
} 

message Player {
  optional int32 id = 1;
  optional int32 cardsInHand = 3;
  optional string name = 4;
}

message Game {
  optional int32 id = 1;
  optional int32 currentPlayerId = 2;
  repeated Player players = 3;
  optional Piles piles = 4;
  optional Pile drawPile = 5;
}

message Move {
  optional Piles cardsPlayRequest = 1;
}

service PileService {
  rpc MakeMove (MakeMoveRequest) returns (MakeMoveResponse);

  rpc GenerateGame (GenerateGameRequest) returns (GenerateGameResponse);
}

message MakeMoveRequest {
  optional Game game = 1;
  optional Move move = 2;
}

message MakeMoveResponse {
  enum Status {
    SUCCESS = 0;
    INVALID_MOVE = 1;
    GAME_OVER = 2;
  }

  optional Game game = 1;
  optional Status status = 2;
}

message GenerateGameRequest {
  optional int32 playerCount = 1;
}

message GenerateGameResponse {
  optional Game game = 1;
}